{"version":3,"sources":["components/Header.js","components/Search.js","components/TVTable.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","getSearchRequest","useState","text","setText","onSubmit","e","preventDefault","type","id","placeholder","value","onChange","target","TVTable","model","keys","Object","TableContainer","component","Paper","Table","sx","minWidth","size","TableHead","map","k","TableRow","TableCell","align","defaultProps","Button","color","onClick","onKeyPress","style","backgroundColor","App","Model","setModel","showTable","setShowTable","ModelsLength","setModelsLength","ModelIndex","setModelIndex","fetchTV","queryModel","a","fetch","res","json","data","models","length","NextModel","keyCode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b6e064b.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <header className=\"header\">\n            <h1>AVpro - TV sets</h1>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState } from \"react\"\n\n\nconst Search = ({ getSearchRequest }) => {\n    \n    const [text, setText] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        getSearchRequest(text)\n    }\n    \n    \n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <input\n                    type=\"text\"\n                    id=\"header-search\"\n                    placeholder=\"TV model\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <input type='submit' value='Hľadať' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default Search\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nconst TVTable = ( {model} ) => {\n  const keys = Object.keys(model);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"simple table\">      \n        <TableHead>\n          {keys.map((k) => (\n            <TableRow>\n              <TableCell>{k}</TableCell>\n              <TableCell align=\"right\">{model[k]}</TableCell>\n            </TableRow>\n          ))}\n        </TableHead>\n      </Table>\n    </TableContainer>\n  );\n}\n\nTVTable.defaultProps = {\n  model: {}\n}\n\nexport default TVTable\n\n","const Button = ( {text, color, onClick, onKeyPress} ) => {\n    \n    return (\n        <div>\n            <input\n                type=\"hidden\"\n                onKeyPress={onKeyPress}\n            />\n            <button \n                className='btn btn-block'\n                style={{ backgroundColor: color }}\n                onClick={onClick}\n            >\n                    {text}\n            </button>\n        </div>\n    )\n}\n\nexport default Button\n","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport TVTable from \"./components/TVTable\";\nimport Button from './components/Button';\n\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  const [Model, setModel] = useState([])\n  const [showTable, setShowTable] = useState(false)\n  const [ModelsLength, setModelsLength] = useState(0)\n  const [ModelIndex, setModelIndex] = useState(0)\n\n  const fetchTV = async (queryModel) => {\n    const res = await fetch(`http://localhost:8000/${queryModel}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  const getSearchRequest = async (queryModel) => {\n    const models = await fetchTV(queryModel)\n\n    setModel(models)\n    setShowTable(true)\n    setModelsLength(models.length)\n  }\n\n  const NextModel = () => {\n    if(ModelIndex === ModelsLength - 1){\n      setModelIndex(0)\n    }\n    else {\n      setModelIndex(ModelIndex + 1)\n    }\n  }\n\n  const handleKeypress = e => {\n    //it triggers by pressing the enter key\n    if (e.keyCode === 13) {\n      NextModel();\n    }\n  };\n\n  return (\n      <div className=\"container\">\n        <Header/>\n        <Search getSearchRequest={getSearchRequest}/>\n        {showTable && <h2>Model: {ModelIndex + 1}</h2>}\n        {showTable && <TVTable model={Model[ModelIndex]}/> }\n        {showTable && <Button text=\"Ďalej\" color=\"green\"\n          onClick={NextModel} onKeyPress={handleKeypress}/> }\n      </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}